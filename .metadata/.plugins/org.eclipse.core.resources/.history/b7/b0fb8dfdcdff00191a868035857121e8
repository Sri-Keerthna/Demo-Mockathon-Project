package com.hcl.trade.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.hcl.trade.model.Buy;
import com.hcl.trade.model.Stock;
import com.hcl.trade.service.BuyService;
import com.hcl.trade.service.StockService;
import com.hcl.trade.service.UserService;

@RestController
@RequestMapping("/trade")
public class BuyController {

	@Autowired
	BuyService buyService;
	
	@Autowired
	UserService UserService;
	
	@Autowired
	StockService stockService;
	
	@RequestMapping(value = "/Users/{userid}/", method = RequestMethod.GET)
    public ResponseEntity<List<Buy>> getProduct(@PathVariable("userid") Integer userid) {
		List<Buy> buy = buyService.displayByUserid(userid);
        if (buy.isEmpty()) {
            return new ResponseEntity<List<Buy>>(buy, HttpStatus.NOT_FOUND);
        }
        return new ResponseEntity<List<Buy>>(buy, HttpStatus.OK);
    }
	
	@RequestMapping(value = "/stock/{stockid}", method = RequestMethod.PUT)
    public ResponseEntity<List<Stock>> updateStock(@PathVariable("stockid") Integer stockid, @RequestBody Stock stock) {
 
		List<Stock> currentProduct = stockService.findById(stockid);
 
        if (currentProduct.isEmpty()) {
            return new ResponseEntity<List<Stock>>(currentProduct, HttpStatus.NOT_FOUND);
        }
 
        currentProduct.setName(product.getName());
        currentProduct.setCategoryId(product.getCategoryId());
        currentProduct.setPrice(product.getPrice());
 
        productService.updateProduct(currentProduct);
        return new ResponseEntity<List<Stock>>(currentProduct, HttpStatus.OK);
    }
}
