package com.hcl.trade.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.hcl.trade.domain.Order;
import com.hcl.trade.exceptions.QuantityNotNullException;
import com.hcl.trade.exceptions.UserIdNotFoundException;
import com.hcl.trade.model.Cart;
import com.hcl.trade.model.Stock;
import com.hcl.trade.repository.CartRepository;
import com.hcl.trade.repository.StockRepository;

@Service
public class CartService {

	@Autowired
	CartRepository cartRepository;

	@Autowired
	StockRepository stockRepository;

	@Autowired
	StockService stockService;

	public List<Cart> displayByUserid(int userid) {
		if (userid == 0) {
			throw new UserIdNotFoundException();
		}
		return cartRepository.findByUserid(userid);

	}

	@Transactional
	public String buyStock(Order order) {
		String res = "";
		Stock stock = stockService.getStockByStockid(order.getStockid());
		Cart cart = new Cart();
		Integer quantityAvailable = stock.getQuantity();
		Integer quantity = 0;
		Integer quantityOrder = order.getQuantity();
		if (quantityOrder == 0) {
			throw new QuantityNotNullException();
		}
		if (quantityAvailable >= quantityOrder) {
			quantity = quantityAvailable - quantityOrder;
			stock.setQuantity(quantity);
			Double totalAmount = 0.0;
			Double unitPrice = stock.getPrice();
			Float brokeragePrice = stock.getBrokerage();
			totalAmount = (unitPrice * quantityOrder) + ((unitPrice * quantityOrder * brokeragePrice) / 100);
			cart.setTotalprice(totalAmount);
			cart.setStockid(order.getStockid());
			cart.setStockname(stock.getStockname());
			cart.setUserid(order.getUserid());
			cart.setQuantityOrder(order.getQuantity());
			cartRepository.save(cart);
			stockService.saveStock(stock);
			res = "Order Applied";
		} else {
			res = "Quantity not available";
		}
		return res;

	}

}
